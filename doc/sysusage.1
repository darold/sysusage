.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SYSUSAGE 1"
.TH SYSUSAGE 1 "2016-06-28" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SysUsage v5.4 \- System Monitoring Tool
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
SysUsage is a tool used to continuously monitor a system and generate
daily/weekly/monthly/yearly graphical report using rrdtool and sar.
.SH "FEATURES"
.IX Header "FEATURES"
SysUsage generate graphical reports on all system activity information.
His periodical reports allow you to keep track of the machine activity
during his life and will be a great help for performance analysis and
resources management.
.PP
SysUsage can be run periodically from 10 seconds cycle in daemon mode
to 1 minute or more using crond.
.PP
SysUsage can be run from a central server to call a ssh remote execution of
the sysusage perl script so that collected data will be stored in this central
place. You also will have just one place where rrdtool and related Perl
modules need to be installed as well as just one place where sysusagegraph
or sysusagejqgraph need to be executed.
.SS "CPUs"
.IX Subsection "CPUs"
.Vb 3
\&        \- CPUs distribution usage (user, nice, system).
\&        \- CPUs global usage (total cpu used, iowait).
\&        \- CPUs virtualized usage (steal, guest).
.Ve
.SS "Memory"
.IX Subsection "Memory"
.Vb 7
\&        \- Memory usage (with and without cache).
\&        \- Swap usage (with and without cache).
\&        \- Amount of memory need for current workload.
\&        \- Posix share memory.
\&        \- Hugepages utilisation
\&        \- Active versus inactive memory
\&        \- Dirty memeory that need to be written to disk
.Ve
.SS "I/O"
.IX Subsection "I/O"
.Vb 6
\&        \- Context switches per second.
\&        \- Interrupts per second.
\&        \- Page swapping.
\&        \- Page I/O stats.
\&        \- I/O request stats.
\&        \- I/O block stats.
.Ve
.SS "Network"
.IX Subsection "Network"
.Vb 6
\&        \- TCP connections per second.
\&        \- TCP segments per second.
\&        \- Number of socket in use (Total, TCP and UDP).
\&        \- Number of socket in TIME_WAIT state.
\&        \- Active network interface usage.
\&        \- Active network interface bad packet, dropping, collision.
.Ve
.SS "Devices"
.IX Subsection "Devices"
.Vb 8
\&        \- CPU time for I/O on device.
\&        \- Read/Write sectors on device.
\&        \- Disk throughput on device.
\&        \- I/O workload on device.       
\&        \- Times for I/O requests issued to device.
\&        \- Hard drive temperature if your hardward support it (with hddtemp).
\&        \- MotherBoard/CPU/Remote temperature reported by sensors or sar.
\&        \- Fan RPM reported by sensors.
.Ve
.SS "Files"
.IX Subsection "Files"
.Vb 3
\&        \- Number of open file.
\&        \- Number of file in a queue directory.
\&        \- Disk space used on mounted partition.
.Ve
.SS "Process"
.IX Subsection "Process"
.Vb 5
\&        \- Load average.
\&        \- Process created per second.
\&        \- Number of running process (ex: sendmail, httpd, oracle, etc.).
\&        \- Number of running thread (ex: mysqld, amarok, etc.).
\&        \- Number of task blocked waiting for I/O
.Ve
.SS "Notification"
.IX Subsection "Notification"
You can have mail or Nagios notification when some monitored values are
outside max/min threshold values for all type of monitoring.
.SS "Plugins"
.IX Subsection "Plugins"
With SysUsage you can create your own monitoring plugins. Any script or
program can be embeded in SysUsage provided that it return up to 3 numeric
values. The graphic title and labels are defined in the configuration file.
.SS "Remote call"
.IX Subsection "Remote call"
SysUsage can be installed and run onto a central server that will be
used to store statistics data by periodically calling sysusage on remote
host using \s-1SSH.\s0 This central place will also be in charge to renderer \s-1HTML\s0
plages and graphics for all hosts. This will allow to simplify the SysUsage
installation on remote host that will only require sysstat and rsysusage.
.SH "REQUIREMENT"
.IX Header "REQUIREMENT"
.SS "rrdtool"
.IX Subsection "rrdtool"
You need to install rrdtool. You can find it at:
.PP
.Vb 1
\&        http://people.ee.ethz.ch/~oetiker/
.Ve
.PP
To use the RRDs perl module you must use the following command
to compile the distrib:
.PP
.Vb 1
\&        make site\-perl\-install
.Ve
.PP
This installation is optional if sysusage is installed on a remote host.
.SS "sysstat"
.IX Subsection "sysstat"
You also need sar to collect statistics. Sar is part of the sysstat
package. You can find it here :
.PP
.Vb 1
\&        http://freshmeat.net/projects/sysstat/
.Ve
.PP
If you plan to use threshold notification you must have Net::SMTP installed.
It can be found on \s-1CPAN \s0(http://search.cpan.org)
.SS "Perl modules"
.IX Subsection "Perl modules"
Sysusage can be run in a central place to collect remote sysusage statistics
using ssh. The remote calls are proceed simultaneously using fork with the
Proc::Queue Perl module.
.PP
If you're plan tu use sysusagegraph instead of sysusagejqgrpah you will also
need the \s-1GD\s0 and GD::Graph3D Perl modules.
.PP
All these modules are always available from \s-1CPAN \s0(http://search.cpan.org/)
and may at least be installed on the central server. On remote host this is
optional and depend if you want to run it on each server or by ssh from a
central place.
.SS "Nagios nsca client (optional)"
.IX Subsection "Nagios nsca client (optional)"
If you want to send message to Nagios you need to install
nsca\-2.7.2.tar.gz or a more recent version. You can get it here:
.PP
.Vb 1
\&        http://sourceforge.net/projects/nagios/files/
.Ve
.SS "hddtemp and sensors (optional)"
.IX Subsection "hddtemp and sensors (optional)"
If you want to monitor your hard drive temperature you must
install a small utility called hddtemp. You can download it from
http://download.savannah.gnu.org/releases/hddtemp/.
Run it to see if your hard drive have a temperature sensor.
.PP
You can also use sensors to monitor your cpu temperature and
fan speed. If you harware support it run sensors-detect and load
the required kernel modules at boot time.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.SS "Quick install"
.IX Subsection "Quick install"
Simply run the following commands:
.PP
.Vb 2
\&        perl Makefile.PL
\&        make && make install
.Ve
.PP
By default it will copy the perl programs into /usr/local/sysusage/bin
and the \s-1HTML\s0 output will be done to /var/www/htdocs/sysusage/.
The configuration file is /usr/local/sysusage/etc/sysusage.cfg and
all \s-1RRD\s0 Bekerley \s-1DB\s0 databases from rrdtool will be saved under
/usr/local/sysusage/rrdfiles.
.PP
If you plan to run sysusage on different servers from a central place you
may just want to install the rsysusage Perl script on remote hosts. So
proceed as follow:
.PP
.Vb 2
\&        perl Makefile.PL REMOTE=1
\&        make && make install
.Ve
.PP
It will copy the only the rsysusage into /usr/local/sysusage/bin and
the configuration file under /usr/local/sysusage/etc/sysusage.cfg. The
\&\s-1RRD\s0 data directory will be created under /usr/local/sysusage/rrdfiles
but just to hold the *.cnt files relatives to the count of alert attempt
on threshold exceed.
.SS "Custom install"
.IX Subsection "Custom install"
You can overwrite all install path with the following Makefile.PL
arguments. Here are the default values:
.PP
.Vb 9
\&        BINDIR=/usr/local/sysusage/bin
\&        CONFDIR=/usr/local/sysusage/etc
\&        PIDDIR=/usr/local/sysusage/etc
\&        BASEDIR=/usr/local/sysusage/rrdfiles
\&        PLUGINDIR=/usr/local/sysusage/plugins
\&        HTMLDIR=/var/www/htdocs/sysusage
\&        MANDIR=/usr/local/sysusage/doc
\&        DOCDIR=/usr/local/sysusage/doc
\&        REMOTE=
.Ve
.PP
For example on a RedHat System you may prefer install SysUsage as this:
.PP
.Vb 3
\&        perl Makefile.PL BINDIR=/usr/bin CONFDIR=/etc PIDDIR=/var/run \e
\&                BASEDIR=/var/lib/sysusage HTMLDIR=/var/www/html/sysusage \e
\&                MANDIR=/usr/man/man1 DOCDIR=/usr/share/doc/sysusage
.Ve
.PP
If you are installing sysusage on a host that will be call by ssh from a
central place, you may want to install just what is necessary and not more:
.PP
.Vb 3
\&        perl Makefile.PL BINDIR=/usr/bin CONFDIR=/etc PIDDIR=/var/run \e
\&                MANDIR=/usr/man/man1 DOCDIR=/usr/share/doc/sysusage \e
\&                REMOTE=1
.Ve
.PP
This will just install the rsysusage Perl script, the configuration file and
documentation. So that you don't need to install extra Perl modules and other
graphics related things.
.SS "Package/binary install"
.IX Subsection "Package/binary install"
In directory packaging/ you will find all scripts to build \s-1RPM,\s0 slackBuild
and debian package. See \s-1README\s0 in this directory to know how to build these
packages.
.SS "Previous version"
.IX Subsection "Previous version"
Previous version used to ask a lot of questions during install, this
was removed since version 3.0 to the benefice of simplicity and a default
configuration file.
.SH "USAGE"
.IX Header "USAGE"
SysUsage consist in two main Perl scripts, sysusage and sysusagegraph. Once you
have correctly installed and configured SysUsage the best way to execute them
is by setting a cron job. If you prefer javascript graphics instead of GD::Graph
images use sysusagejqgraph that is based on jqplot javascript library.
.SS "sysusage"
.IX Subsection "sysusage"
The script sysusage is responsible of collecting system informations at
a given interval and store them into rrdtool database files.
.PP
As it is very fast you can set running interval time to 1 minute. This is
the default pooling interval used in configuration and graph reports.
If you change this interval you must also change it in the configuration file
otherwise your graph will be false. See the \s-1INTERVAL\s0 configuration directive.
.PP
Here is how I use it with a default installation:
.PP
.Vb 1
\&        */1 * * * * /usr/local/sysusage/bin/sysusage > /dev/null 2>&1
.Ve
.SS "rsysusage"
.IX Subsection "rsysusage"
This script do the same things as the sysusage Perl script but instead of
storing collected datas on file it will dump them to the standard output.
This script is used instead of the sysusage Perl script by a ssh call from
a central server where the local sysusage will store the statistics retrieved
from multiple servers.
.PP
.Vb 1
\&        /usr/local/sysusage/bin/rsysusage \-r remote_hostname
.Ve
.PP
Where 'remote_hostname' is the hostname given in the [\s-1REMOTE ...\s0] configuration
section.
.SS "sysusagegraph / sysusagejqgraph"
.IX Subsection "sysusagegraph / sysusagejqgraph"
The perl script sysusagegraph is used to draw \s-1PNG\s0 graphs and write \s-1HTML\s0 file.
As he knows the pooling interval given in the configuration file it can be
run at any time. I used to run it each five minutes but you can run it each
hours or more this is the same.
.PP
.Vb 1
\&        */5 * * * * /usr/local/sysusage/bin/sysusagegraph > /dev/null 2>&1
.Ve
.PP
Since release v4.0 of SysUsage there's a JQuery plotting replacement of rrdGraph
that only write \s-1HTML\s0 files with all javascript code to allow the client browser
to draw the graphs. To enable this feature you just have to use sysusagejqgrpah
instead.
.PP
.Vb 1
\&        */5 * * * * /usr/local/sysusage/bin/sysusagejqgraph > /dev/null 2>&1
.Ve
.PP
There's some more resources javascript libraries and \s-1CSS\s0 files to install. The
SysUsage installer will do the job for you. This remove the requirement of the
\&\s-1GD,\s0 GD::Graph and GD::Graph3D Perl modules.
.SS "sysusage.cfg"
.IX Subsection "sysusage.cfg"
If you have change the default installation path (/usr/local/sysusage)
you may need to give these scripts the path to the configuration file as
command line argument using \-c option. To know what arguments can be
passed use option \-h or \-\-help.
.PP
Note that since version 3.0 the default configuration path in these scripts
is set during installation. So you may not need anymore to edit these scripts
or give the path of the configuration file as command line argument.
.PP
See \s-1CONFIGURATION\s0 chapter for more information on howto configure your system
monitoring.
.SS "Daemon mode"
.IX Subsection "Daemon mode"
Crond is good for scheduling but not under the minute. If you want to monitor
your system within an interval under the minute you may want to run sysusage in
daemon mode. To do that, just change the \s-1INTERVAL\s0 to the desired timer in the
configuration file and the \s-1DAEMON\s0 directive to 1.
.SS "Debug mode"
.IX Subsection "Debug mode"
Some time things don't appear as you wanted. The best way to see what's going
wrong is to run sysusage in debug mode. This mode allow you to see all values
extracted from sar and other tools. Use the \-\-debug option for that, this mode
prevent sysusage to store data in the rrdfiles. Command:
.PP
.Vb 1
\&        /usr/local/sysusage/bin/sysusage \-\-debug
.Ve
.PP
Please, run this command and check the result before sending bug report.
.SS "Output"
.IX Subsection "Output"
Once sysusage and sysusagegraph are running since some cycles, run your
favorite browser and take a look at the output directory. By default:
.PP
.Vb 1
\&        http://my.server.dom/sysusage/
.Ve
.PP
If you have special \s-1URI\s0 and/or port remember to modify the \s-1URL\s0 configuration
directive without that the web interface will not works.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
During installation a default configuration file sysusage.cfg is generated.
The default settings are good enougth to report essential information of your
system, but if you want to monitor some processes, queue directories or some
devices you must edit this file by hand.
.PP
Here is the format of the configuration file and all directives. There is
three section, the first one set the general parameters of the application,
the second set the parameters related to \s-1SMTP\s0 or Nagios notification at
threshold exceed and the last configure all type of system information you
may want to monitor.
.PP
Full sample of configuration file:
.PP
.Vb 10
\&        [GENERAL]
\&        DEBUG       = 0
\&        DATA_DIR    = /usr/local/sysusage/rrdfiles
\&        PID_DIR     = /usr/local/sysusage/etc
\&        DEST_DIR    = /var/www/htdocs/sysusage
\&        SAR_BIN     = /usr/bin/sar
\&        UPTIME      = /usr/bin/uptime
\&        HOSTNAME    = /bin/hostname
\&        INTERVAL    = 60
\&        SKIP        = 12:00/14:00 20:00/06:00
\&        HDDTEMP_BIN = /usr/local/sbin/hddtemp
\&        SENSORS_BIN = /usr/bin/sensors
\&        DAEMON      = 0
\&        GRAPH_WIDTH = 550
\&        GRAPH_HEIGHT= 200
\&        FLAMING     = 0
\&        HIRES       = 0
\&        LINE_SIZE   = 2
\&        PROC_QSIZE  = 4
\&        RESRC_URL   =
\&        SSH_BIN     = /usr/bin/ssh
\&        SSH_OPTION  = \-o ConnectTimeout=5 \-o PreferredAuthentications=hostbased,publickey
\&        SSH_USER    =
\&        SSH_IDENTITY=
\&
\&
\&        [ALARM]
\&        WARN_MODE   = 0
\&        ALARM_PROG  = /usr/local/sysusage/bin/sysusagewarn
\&        SMTP        = localhost
\&        FROM        = root@localhost
\&        TO          = root@localhost
\&        NAGIOS      = /usr/local/nagios/bin/submit_check_result
\&        UPPER_LEVEL = 1
\&        LOWER_LEVEL = 2
\&        URL         =
\&
\&        [MONITOR]
\&        load:threshold_max_value
\&        blocked:threshold_max_value
\&        cpu:threshold_max_value
\&        cswch:threshold_max_value
\&        intr:threshold_max_value
\&        mem:threshold_max_value
\&        dirty:threshold_max_value
\&        swap:threshold_max_value
\&        work:threshold_max_value
\&        share:threshold_max_value
\&        sock:threshold_max_value
\&        socktw:threshold_max_value
\&        io:threshold_max_value
\&        file:threshold_max_value
\&        page:threshold_max_value
\&        pcrea:threshold_max_value
\&        pswap:threshold_max_value
\&        net:threshold_max_value
\&        tcp:threshold_max_value
\&        err:threshold_max_value
\&        disk:threshold_max_value
\&        proc:proc_name:threshold_max_value:threshold_min_value
\&        tproc:proc_name:threshold_max_value:threshold_min_value
\&        queue:path_queue_dir:threshold_max_value
\&        hddtemp:device:threshold_max_value
\&        dev:device(alias):threshold_max_value
\&        dev:device(alias):rpm_speed:raid_type:nb_disk
\&        work:threshold_max_value
\&        sensors:pattern:threshold_max_value
\&        temp:device:threshold_max_value
\&        fan:device:threshold_max_value
\&        huge:threshold_max_value
\&
\&        [PLUGIN testplug]
\&        title:Sysage Test plugin
\&        menu:Database
\&        enable:no
\&        program:/usr/local/sysusage/plugins/plugin\-sample.pl
\&        minThreshold:0
\&        maxThreshold:10
\&        verticalLabel:Number of seconds
\&        label1:Total seconds
\&        label2:
\&        label3:
\&        legend1:seconds
\&        legend2:
\&        legend3:
\&        remote:yes
\&
\&        [REMOTE hostname1]
\&        enable:no
\&        ssh_user:monitor
\&        ssh_identity:/home/monitor/.ssh/id_rsa
\&        #ssh_options: \-o ConnectTimeout=5 \-o PreferredAuthentications=hostbased,publickey
\&        #ssh_command:
\&        remote_sysusage:/usr/local/sysusage/bin/rsysusage
\&
\&        #[GROUP Web Servers]
\&        #hostname1
\&        #hostname2
.Ve
.SS "Section \s-1GENERAL\s0"
.IX Subsection "Section GENERAL"
.IP "\s-1DEBUG  \s0 = 0|1" 4
.IX Item "DEBUG = 0|1"
This option is used to set debug mode. If set to 1 then sysusage and
sysusagegraph just show what they do but don't create or send anything.
.IP "\s-1DATA_DIR \s0 = /path/to/rrdfiles" 4
.IX Item "DATA_DIR = /path/to/rrdfiles"
This option is used to set te ouput directory for all \s-1RRDTOOL\s0 database.
.IP "\s-1PID_DIR  \s0 = /path/to/piddir" 4
.IX Item "PID_DIR = /path/to/piddir"
sysusage and sysusagegraph use a file to store the pid of the running
process to prevent simultaneous run.
.IP "\s-1DEST_DIR \s0 = /path/to/html_output" 4
.IX Item "DEST_DIR = /path/to/html_output"
Set the path to the directory where all \s-1HTML\s0 and graph files should be
created.
.IP "\s-1SAR_BIN  \s0 = /path/to/sar_binary" 4
.IX Item "SAR_BIN = /path/to/sar_binary"
sysusage use sar, part of the sysstat distribution to grab system
information so we need to know where it is.
.IP "\s-1UPTIME   \s0 = /path/to/uptime_binary" 4
.IX Item "UPTIME = /path/to/uptime_binary"
sysusagegraph report the current uptime of the system using the uptime
command. Used to set path to uptime binary.
.IP "\s-1HOSTNAME \s0 = /path/to/hostname_binary" 4
.IX Item "HOSTNAME = /path/to/hostname_binary"
All scripts of Sysusage distribution need to know the name of the host.
They use hostname command for that.
.IP "\s-1INTERVAL \s0 = pull_interval_in_second" 4
.IX Item "INTERVAL = pull_interval_in_second"
All \s-1RRDTOOL\s0 input use the given interval in second to store monitored values.
Graph construction also use this interval to render things properly. By
default Sysusage use an interval of 60 seconds to have a better statistic
report. You can change this but it's not recommanded. If you change this
adjust your crontab to the same value. This value must between 10 and 300
seconds. If you want to be under the minute you must use the daemon mode to
run sysusage. See \s-1DAEMON\s0 bellow.
.IP "\s-1SKIP     \s0 = \s-1HH:MM/HH:MM HH:MM/HH:MM ...\s0" 4
.IX Item "SKIP = HH:MM/HH:MM HH:MM/HH:MM ..."
You can define here some time range where monitoring will not be done. Value
is a list of begin_time/end_time separated by space or tabulation. Let's say
you don't want to monitor the host during the night for some good reason, you
can write it like that: 20:00/06:00
.IP "\s-1HDDTEMP_BIN\s0 = /path/to/hddtemp_binary" 4
.IX Item "HDDTEMP_BIN = /path/to/hddtemp_binary"
You can monitor your hard drive temperature if you have installed hddtemp
utility. We need to know the path to hddtemp binary.
.IP "\s-1SENSORS_BIN\s0 = /path/to/sensors_binary" 4
.IX Item "SENSORS_BIN = /path/to/sensors_binary"
You can monitor your device temperature if you have installed lm_sensor
utility. We need to know the path to sensors binary.
.IP "\s-1DAEMON\s0 = 0 | 1" 4
.IX Item "DAEMON = 0 | 1"
You can monitor your system under the crond limitation of 1 minute by running
sysusage in daemon mode with an \s-1INTERVAL\s0 between 10 end 60 seconds.
.IP "\s-1GRAPH_WIDTH\s0 and \s-1GRAPH_HEIGHT\s0" 4
.IX Item "GRAPH_WIDTH and GRAPH_HEIGHT"
These are usefull if you want to resize graph dimension. Default is a width
of 550 pixels and a height of 200.
.IP "\s-1FLAMING\s0" 4
.IX Item "FLAMING"
This is for fun, if you want to have random flaming effect on graphs with only
dataset set this directive to 1. Disable by default. Not used with JQuery graph
renderer.
.IP "\s-1HIRES\s0" 4
.IX Item "HIRES"
Allow addition of hourly graph to have fine granularity of the data. This is
disable by default. Set it to any integer between 1 to 23 hours included to
show data from past N hours to now. Not used with JQuery graph renderer as the
Javascript library allow you to zoom into the resolution you want.
.IP "\s-1LINE_SIZE\s0" 4
.IX Item "LINE_SIZE"
By default the graph line size is 1 if you want graph with a more thick line
set it to 2. This is rrd graph limitation (1 or 2). Not used with JQuery graph
renderer.
.IP "\s-1PROC_QSIZE\s0" 4
.IX Item "PROC_QSIZE"
Number of simultaneous remote sysusage call process that should be run. Default
is 4 but it can be up to 15 or more depending of the hardware configuration. One
per core is the lower value you may think about.
.IP "\s-1RESRC_URL\s0" 4
.IX Item "RESRC_URL"
Images, javascripts and css ressources by default are search into the \s-1DEST_DIR\s0
directory so that in the \s-1HTML\s0 view they all stayed on the current main directory.
You may want to place thoses resources on an other directory or an another place.
Using this directive you can set any \s-1FQDN,\s0 absolute or relative \s-1URL\s0 for these
resources.
.IP "\s-1SSH_IDENTITY\s0" 4
.IX Item "SSH_IDENTITY"
Used to set the default identity file to connect to all remote hosts without
password. If undefined, sysusage will use the ssh system default value. You may
want to use the default value unless you know exactly what's you are doing.
.IP "\s-1SSH_OPTION\s0" 4
.IX Item "SSH_OPTION"
Use set the default ssh options, that correspond to a passwordless authent:
.Sp
.Vb 1
\&        \-o ConnectTimeout=5 \-o PreferredAuthentications=hostbased,publickey
.Ve
.Sp
with a five seconds connection timeout. You may want to increase this timeout
on very slow network links.
.Sp
Do not change this value unless you know exactly what's you are doing.
.IP "\s-1SSH_BIN\s0" 4
.IX Item "SSH_BIN"
Path to the ssh command is set here at install time.
.IP "\s-1SSH_USER\s0" 4
.IX Item "SSH_USER"
Used to defined the default ssh user that will be used to connect to all remote
hosts.
.SS "Section \s-1ALARM\s0"
.IX Subsection "Section ALARM"
.IP "\s-1WARN_MODE  \s0 = 0|1" 4
.IX Item "WARN_MODE = 0|1"
Used to disable/enable alert message during threshold exceed.
.IP "\s-1ALARM_PROG \s0 = /path/to/sysusagewarn" 4
.IX Item "ALARM_PROG = /path/to/sysusagewarn"
Used to set path to the external program responsible of sending alarm message.
You can change it to your own, just take a look at the sysusagewarn usage to
see what command line options are used by sysusage
.IP "\s-1SMTP       \s0 = smtp.server.net" 4
.IX Item "SMTP = smtp.server.net"
Name or Ip address of the \s-1SMTP\s0 server to contact. Default is none => No smtp
message is sent.
.IP "\s-1FROM       \s0 = sender@localhost" 4
.IX Item "FROM = sender@localhost"
Sender email addresse to use in the \s-1SMTP\s0 message.
.IP "\s-1TO         \s0 = destination@localhost" 4
.IX Item "TO = destination@localhost"
Destination email address where the alarm message will be sent.
.IP "\s-1NAGIOS     \s0 = /usr/local/nagios/bin/submit_check_result" 4
.IX Item "NAGIOS = /usr/local/nagios/bin/submit_check_result"
Path to the external nsca program used to send check message to Nagios.
Setting this will activate nagios check report. See at end of this file
to see how to configure Nagios
.IP "\s-1UPPER_LEVEL\s0 = 1" 4
.IX Item "UPPER_LEVEL = 1"
Nagios check level to send when a high threshold limit is reached. Default
is 1 => \s-1WARNING.\s0
.IP "\s-1LOWER_LEVEL\s0 = 2" 4
.IX Item "LOWER_LEVEL = 2"
Nagios check level to send when a low threshold limit is reached. Default
is 2 => \s-1CRITICAL.\s0
.IP "\s-1URL\s0 = Url of Sysusage report" 4
.IX Item "URL = Url of Sysusage report"
Used to overwrite the default \s-1URL\s0 of SysUsage report http://host.dom/sysusage/
especially if you have a special port or a different path. Example:
http://hostname.domain:9080/Reports/Sysusage/
.IP "\s-1SKIP\s0 = \s-1HH:MM/HH:MM HH:MM/HH:MM ...\s0" 4
.IX Item "SKIP = HH:MM/HH:MM HH:MM/HH:MM ..."
You can define here some time range where alarm notice will not be sent.
Value is a list of begin_time/end_time separated by space or tabulation.
Let's say you don't want to received notice during the night for some
good reason, you can write it like that: 20:00/06:00
.SS "Section \s-1MONITOR\s0"
.IX Subsection "Section MONITOR"
This section has two different format the first one is used to specify
most of the monitoring target:
.PP
.Vb 1
\&        type:threshold_max
.Ve
.PP
or
.PP
.Vb 1
\&        type:threshold_max(attempt)
.Ve
.IP "type" 4
.IX Item "type"
Type of system information you may want to monitor. It can takes
around 30 differents values:
.Sp
.Vb 10
\&        load   => monitor load average
\&        blocked=> monitor task blocked waiting for I/O
\&        cpu    => monitor each cpu(s) user/nice/system usage
\&               => monitor each cpu(s) total/iowait usage
\&               => monitor each cpu(s) steal/guest usage
\&        cpuall => monitor global cpu(s) statistics
\&        cswch  => monitor context switches usage
\&        intr   => monitor number of interrupt per second
\&        mem    => monitor memory usage
\&        dirty  => monitor memory active/inactive/dirty memory
\&        share  => monitore Posix share memory usage (/dev/shm)
\&        swap   => monitor swap usage
\&        work   => monitor amount of memory needed for current workload
\&        sock   => monitor number of open socket
\&        socktw => monitor number of socket in TIME_WAIT state
\&        io     => monitor I/O request and block usage
\&        page   => monitor I/O page usage
\&        pswap  => monitor I/O page swap usage
\&        pcrea  => monitor number of process created per second
\&        proc   => monitor number of running process
\&        tproc  => monitor number of running thread
\&        file   => monitor number of open file
\&        queue  => monitor number of files in queue
\&        net    => monitor I/O network bytes on all network interfaces
\&        err    => monitor bad packet, drop and collision on interfaces
\&        tcp    => monitor number of tcp connection and segment
\&        disk   => monitor disk space usage
\&        dev    => monitor percentage of CPU time per device
\&               => monitor average request queue length
\&               => monitor I/O sectors read and write to device
\&               => monitor time spent in queue (await)
\&               => monitor time spent in servicing (svctm)
\&        sensors=> monitor fan and device temperature using sensors command
\&        hddtemp=> monitor disk drive temperature
\&        temp   => monitor device temperature using sar
\&        fan    => monitor fan rotation using sar
\&        huge   => monitor size of hugepages utilisation
.Ve
.Sp
Note: the 'cpu' target monitoring type will report all statictics per cpu. This
can represent a lot of informations if you several cpu. To limit statistics to
total cpu only, you must replace default the 'cpu' target to 'cpuall' in your
configuration file.
.IP "threshold_max" 4
.IX Item "threshold_max"
.Vb 3
\&        This is the maximum threshold value. Any value equal or upper
\&        than this one will generate SMTP and/or Nagios alert if you
\&        have enable it.
.Ve
.IP "attempt" 4
.IX Item "attempt"
You can delay the call to the alarm program at threshold exceed by specifying
the number of consecutive exceed attempt before the command will be called.
Just specify the number of attempt between bracket just after the min and/or
max threshold value. This setting is optional for both threshold value and the
default is to send alarm immediatly.
.IP "Specials cases" 4
.IX Item "Specials cases"
There's a special case for 'disk' usage monitoring that allow exclusion
of some mount point. This is usefull if you have hard link or some
special device you don't need to monitor. Where exclusion is a semi\-
colon (;) separated list of mount point to exclude from monitoring.
.Sp
.Vb 1
\&        disk:ThresholdMax:exclusion
.Ve
.Sp
Ex: disk:90:/home/mondo_image;/home/smb_mountpoint
.Sp
You can use regexp in your excluded path.
.Sp
The other directive with special syntax is 'dev'. It is construct as follow:
.Sp
.Vb 1
\&        dev:device(alias):rpm_speed:raid_type:nb_disk
.Ve
.Sp
where device is sda, sdb or any device name (without the /dev/), the alias
between parenthesis is the name that must be displayed in the user interface
instead of the device name. For example:
.Sp
.Vb 2
\&        dev:sdc(ASM disk1):
\&        dev:sdb(/data):
.Ve
.Sp
I you plan to use I/O workload report, SysUsage need to know the speed of the
disk (\s-1RPM\s0), the raid type (0,1,5,10) and the number of disk in the raid array
to calculate the \s-1IOPS.\s0 For example if we have a 7200 \s-1RPM\s0 disk with 2 disk in
raid 1, we will write thing like that:
.Sp
.Vb 1
\&        dev:sdc(ASM disk1):7200:1:2
.Ve
.Sp
I/O workload is the relation between \s-1TPS \s0(transfers per second) and \s-1IOPS
\&\s0(I/O operations measured in seconds) of a device. If the tps returned by
sysstat reach the maximum theoretical \s-1IOPS,\s0 your storage subsystem is saturated.
Here is the equation to calculate the maximum theoretical \s-1IOPS:\s0
.Sp
.Vb 5
\&        d = number of disks
\&        dIOPS = IOPS per disk
\&        %r = % of read workload
\&        %w = % of write workload
\&        F = raid factor
\&
\&        IOPS = (d *dIOPS) / (%r + (F * %w))
.Ve
.Sp
the theoretical maximum \s-1IOPS\s0 for a \s-1RAID\s0 set (excluding caching of course).
To do this you take the product of the number of disks and \s-1IOPS\s0 per disk
divided by the sum of the \f(CW%read\fR workload and the product of the raid factor
and \f(CW%write\fR workload. Where \f(CW%read\fR and \f(CW%write\fR are calculated from the following
equation:
.Sp
.Vb 2
\&        %r = rd_sec / (rd_sec + wr_sec);
\&        %w = wr_sec / (rd_sec + wr_sec);
.Ve
.Sp
This \s-1IOPS\s0 monitoring is build following the excellent article of Nick Anderson
readable from Analyzing I/O performance in Linux.
.PP
The second format is used to monitor running process, hard drive
temperature or queue directory. It has the following format:
.PP
.Vb 1
\&        type:target:threshold_max_value:threshold_min_value
.Ve
.PP
or
.PP
.Vb 1
\&        type:target:threshold_max_value(attempt):threshold_min_value(attempt)
.Ve
.IP "type" 4
.IX Item "type"
Type of system information you may want to monitor. It can takes
these differents values:
.Sp
.Vb 3
\&        load, cpu, cswch, intr, mem, swap, work, share, sock, socktw, io, file,
\&        page, pcrea, pswap, net, tcp, err, disk, proc, tproc, queue, hddtemp,
\&        dev, work, sensors, temp, fan, huge, blocked, dirty
.Ve
.IP "target" 4
.IX Item "target"
If type is 'proc' or 'tproc' target represent the name of the process to
monitor. You can put a regexp as target to match exactly the required process.
The number of running process are obtain by the system command line:
.Sp
.Vb 1
\&        ps \-e \-o command | grep \-E "target" | grep \-v grep | wc \-l
.Ve
.Sp
so you can replace the word target by the regexp to match and see if it
returns the right number of process.
.Sp
The number of running thread are obtain by the system command line:
.Sp
.Vb 1
\&        ps \-eL \-o command | grep \-E "target" | grep \-v grep | wc \-l
.Ve
.Sp
If type is 'queue' this represent the full path of the directory to monitor.
Sysusage will try to find and count any regular file in the target directory
and will not follow sub directories.
.Sp
If type is 'hddtemp' the target represent the hard drive device to monitor,
ex: /dev/sda. You can try it with the following command line:
.Sp
.Vb 1
\&        hddtemp \-n /dev/sda
.Ve
.Sp
This may return the actual temperature detected on the hard drive.
.Sp
If this is 'dev' this represent the device name to monitor. Ex: sda.
Do not add the /dev/ before this will not work. You may want to change the
device name in the graphic menu, this is possible by adding the device alias
enclosed with parenthesis.
.Sp
For example lets say you're monitoring some EMCpower \s-1SAN\s0 device. Using sar
the reported devices are dev120\-48 and dev120\-64. Once you have find what
partition are mapped to these devices (reading /proc/partitions). In this
example these devices are mounted as /cache1 and /cache2 so we want to see
these mount points instead of device number in the graphical menu:
.Sp
.Vb 2
\&        dev:dev120\-48(/cache1):90
\&        dev:dev120\-64(/cache2):97
.Ve
.Sp
in you sysusage.conf file will do the job. The threshold_max value is the max
percentage of \s-1CPU\s0 used for this device before sending an alarm.
.Sp
If type is 'sensors' this represent the pattern to match to obtain temperature
or fan speed information in the sensors program output. See chapter \s-1SENSORS\s0 to
have more information.
.Sp
If type is 'temp' or 'fan' this represent the device number reported by sar
to obtain temperature or fan speed information. To know what device number
must be used, see result of command: sar \-m \s-1ALL 1 1\s0
.IP "threshold_max" 4
.IX Item "threshold_max"
This is the maximum threshold value. Any value equal or upper will generate
an \s-1SMTP\s0 and/or Nagios alert if you have enable it.
.IP "threshold_min" 4
.IX Item "threshold_min"
This is the minimum threshold value. Any value equal or lower of this one will
generate \s-1SMTP\s0 and/or Nagios alert if you have enable it. Min threshold should
certainly only be used with 'proc' and 'tproc' monitoring type. If you set it
to 0 then you will be warn if any of the monitored process are down.
.IP "attempt" 4
.IX Item "attempt"
You can delay the call to the alarm program at threshold exceed by specifying
the number of consecutive exceed attempt before the command will be called.
Just specify the number of attempt between bracket just after the min and/or
max threshold value. This setting is optional for both threshold value and the
default is to send alarm immediatly.
.Sp
For example a load average monitoring defined like this
.Sp
.Vb 1
\&        load:12(3)
.Ve
.Sp
will send an alarm when the system load average will exceed 12 after three
consecutives attempts at the define interval. If the interval is 60 seconds,
the alarm will be sent up to 180 second after the first exceed.
.SS "Section \s-1PLUGIN\s0"
.IX Subsection "Section PLUGIN"
This part enable the use of custom plugins. You can call any program or script
provide that it return up to 3 numbers separated by a space character. See
plugins/ directory for sample scripts.
.PP
This section must include a name composed of any alphanumeric character
that will be used to create the target file, for example:
.PP
.Vb 1
\&        [PLUGIN testplug1] or [PLUGIN testplug2]
.Ve
.PP
The section allow the following configuration directives. They are
composed of named directives followed by ':' or '=' and a value.
.IP "enable" 4
.IX Item "enable"
Is used to disable temporary the plugin monitoring. Default is 'yes' enable.
To disable write it enable:no
.IP "program" 4
.IX Item "program"
Is used to set the path to the program or script to execute as plugin. This
program must print to \s-1STDOUT 1\s0 to 3 numbers separated by a space character
as result following the number of reports you want. So each plugin can have 1,
2 or 3 graphed data.
.IP "title" 4
.IX Item "title"
Is used to set the title of the report page and the index link. Default is set
to \*(L"Sysusage plugin\*(R".
.IP "menu" 4
.IX Item "menu"
Is used to store the plugin under a submenu of the plugins menu. Default is
to store plugin under the \*(L"Others\*(R" submenu.
.IP "maxthreshold" 4
.IX Item "maxthreshold"
This is the maximum threshold value. Any value equal or upper than this one
will generate \s-1SMTP\s0 and/or Nagios alert if you have enable it.
.IP "minthreshold" 4
.IX Item "minthreshold"
This is the minimum threshold value. Any value equal or lower of this one
will generate \s-1SMTP\s0 and/or Nagios alert if you have enable it.
.IP "verticallabel" 4
.IX Item "verticallabel"
This is used to set the vertical label of the graph.
.IP "label1, label2, label3" 4
.IX Item "label1, label2, label3"
Are used to show a legend for each graphed data, label1 is for the first
returned value, label2 for the second and label3 for the last. If you just
have one value returned just omit the other labels.
.IP "legend1, legend2, legend3" 4
.IX Item "legend1, legend2, legend3"
These are use to set the units for Current, Avg and Max values.
.IP "remote" 4
.IX Item "remote"
This directive must be set to 'no' to prevent execution of the plugin
program by a issh call to sysusage in a remote context. This directive
is activated by default ('yes').
.SS "Section \s-1REMOTE\s0"
.IX Subsection "Section REMOTE"
This part allow to run sysusage on remote hosts from a central server. It use
ssh to execute sysusage on the destination host with the \-r option that force
sysusage to not write anything to local data files but to print all result to
stdout. As sysusage is run by cron job or daemon mode it can not authenticate
interactively to remote host so you must give a ssh user and an identity file
with the corresponding configuration option.
.PP
This section must include the name or the ip address of the remote host
that will be used to create the target data directory, for example:
.PP
.Vb 1
\&        [REMOTE hostname] or [REMOTE host.domain.dom] or [REMOTE 192.168.1.14]
.Ve
.PP
The section allow the following configuration directives. They are
composed of named directives followed by ':' or '=' and a value.
.PP
Once you have installed sysusage on all remote host and exchange the \s-1SSH\s0 key
certificat between the central host and all remote hosts, most of the time you
just have to set the ssh_user directive to have it working. Use remote_sysusage
directive if sysusage perl script is not installed on the same place than the
central server.
.SS "Section \s-1GROUP\s0"
.IX Subsection "Section GROUP"
This section allow you to groups remote host report under a common groupname
in the index page. Remote hosts will be ordered following their parent groups.
The name of the group can be any string and the values in the section must be
a list of remote servers defined in the \s-1REMOTE\s0 sections.
.PP
For example if you are monitoring a cluster of web and database servers you can
use the following declaration:
.PP
.Vb 4
\&        [GROUP Web Servers]
\&        webhost1
\&        webhost2
\&        webhost3
\&
\&        [GROUP Database Servers]
\&        dbhost1
\&        dbhost2
.Ve
.PP
Of course webhostN and dbhostN hosts must be declared in the remote section.
.IP "enable" 4
.IX Item "enable"
Is used to enable/disable the remote host monitoring. Default is 'yes' enable.
Set it as 'enable=no' to disable it.
.IP "ssh_user" 4
.IX Item "ssh_user"
Used to defined the ssh user allowed to connect to remote host. By default the
value set to \s-1SSH_USER\s0 configuration option in the \s-1GENERAL\s0 section will be used.
.IP "ssh_identity" 4
.IX Item "ssh_identity"
Used to set the identity file to connect to remote host without password.
By default the value set to \s-1SSH_IDENTITY\s0 configuration option in the \s-1GENERAL\s0
section will be used. Usually this is the private key that you've generated
using ssh-keygen and most of the time file \f(CW$HOME\fR/.ssh/id_rsa. You may want
to use the default value unless you know exactly what's you are doing.
.IP "ssh_options" 4
.IX Item "ssh_options"
Use to overwrite the default ssh options, that are:
.Sp
.Vb 1
\&        \-o ConnectTimeout=5 \-o PreferredAuthentications=hostbased,publickey
.Ve
.Sp
The default options are set into the \s-1SSH_OPTIONS\s0 configuration option in the
\&\s-1GENERAL\s0 section. You may want to use the default value unless you know exactly
what's you are doing.
.IP "ssh_command" 4
.IX Item "ssh_command"
You can overwrite the complete ssh command using this directive, this will
replace the ssh command, the ssh option, the ssh user and the host part.
The sysusage remote command will not be replaced. You may want to use the
default value unless you know exactly what's you are doing.
.IP "remote_sysusage" 4
.IX Item "remote_sysusage"
Use it to set the path to the rsysusage command that must be used on the
remote host, SysUsage will automatically add the \-r option to cause the
remote execution mode.
.SH "THRESHOLD NOTIFICATION"
.IX Header "THRESHOLD NOTIFICATION"
.SS "\s-1SMTP\s0 alert"
.IX Subsection "SMTP alert"
Sysusage use an external perl script to send \s-1SMTP\s0 alert and/or Nagios checks
when a max or min threshold is reached. This program is named sysusagewarn.
All options of the configuration file in section [\s-1ALARM\s0] are use by sysusage
to call this program. If they are correctly set you don't have to take care
of the parameters given to this program. If you want to use this program
outside sysusage, here are the command line options it understand:
.PP
.Vb 2
\&        Usage: sysusagewarn \-t subject \-c current_value \-v threshold_value
\&                        [\-s smtp_srv] [\-f from] [\-d to] [\-b hostname_prog]
\&
\&        \-t subject : Subject of the alarm
\&        \-c value   : Current value monitored by sysusage
\&        \-v value   : Threshold value used.
\&        \-s host    : SMTP server name or ip where to send email.
\&        \-f from    : Sender email address of the alarm message.
\&        \-d to      : Destination address of the alarm message.
\&        \-b path    : Path to program hostname. Default is /bin/hostname
\&        \-n path    : Path to Nagios program submit_check_result. Default none. 
\&        \-l value   : Alarm level (0=OK,1=WARNING,2=CRITICAL). Default: 1. 
\&        \-r service : Nagios service name to used. Must be any sysusage type of
\&                     monitoring defined in the configuration file.
\&        \-u url     : Url to HTML sysusage output to include in email.
\&                     Default: http://hostname.domain/sysusage/
\&        \-h         : Output this message and exit
.Ve
.SS "\s-1NAGIOS\s0 alert"
.IX Subsection "NAGIOS alert"
SysUsage send check message to Nagios through an external command
(submit_check_result). So you need to create the host and associate
all sysusage service that you want to monitor with Nagios. The services
name correspond to the type of monitoring. For example, if you have
enable alarm on memory usage the service sent is 'mem'. There's also
specials case with type of monitoring with multiple instance like
network monitoring. You need to create a service per instance. For
example type 'net' will have 'net_eth0' and 'net_lo' and more if you
have more network interface. To see if your sysusage alarm messages
are well understood by Nagios take a look at the nagios.log file
(default to /usr/local/nagios/var/nagios.log).
.PP
To desactivate automatically an alarm reported to Nagios, SysUsage
will send each time it run an \s-1OK\s0 request if every thing is correct
for the monitored type.
.SH "SENSORS"
.IX Header "SENSORS"
Monitoring of sensors output is based on regexp. To be clear enought here
an example:
.PP
Sensors output on my server:
.PP
.Vb 10
\&        adt7463\-i2c\-0\-2d
\&        Adapter: SMBus I801 adapter at 1480
\&        V1.5:        +3.23 V  (min =  +0.00 V, max =  +3.32 V)
\&        VCore:       +1.24 V  (min =  +1.10 V, max =  +1.49 V)
\&        V3.3:        +3.33 V  (min =  +2.80 V, max =  +3.78 V)
\&        V5:          +4.99 V  (min =  +4.25 V, max =  +5.75 V)
\&        V12:         +0.11 V  (min =  +0.00 V, max = +15.94 V)
\&        CPU_Fan:       0 RPM  (min =    0 RPM)
\&        fan2:       10671 RPM  (min = 8095 RPM)
\&        fan3:          0 RPM  (min =    0 RPM)
\&        fan4:          0 RPM  (min =    0 RPM)
\&        CPU Temp:    +69.5 C  (low  =  +2.0 C, high = +91.0 C)
\&        Board Temp:  +32.5 C  (low  =  +2.0 C, high = +83.0 C)
\&        Remote Temp: +31.2 C  (low  =  +2.0 C, high = +58.0 C)
\&        cpu0_vid:   +1.338 V
\&
\&        adt7463\-i2c\-0\-2e
\&        Adapter: SMBus I801 adapter at 1480
\&        V1.5:        +3.21 V  (min =  +0.00 V, max =  +3.32 V)
\&        VCore:       +1.28 V  (min =  +1.10 V, max =  +1.49 V)
\&        V3.3:        +3.32 V  (min =  +2.80 V, max =  +3.78 V)
\&        V5:          +4.95 V  (min =  +0.00 V, max =  +6.64 V)
\&        V12:         +0.11 V  (min =  +0.00 V, max = +15.94 V)
\&        CPU_Fan:    10843 RPM  (min = 8095 RPM)
\&        fan2:          0 RPM  (min =    0 RPM)
\&        fan3:       9642 RPM  (min = 8095 RPM)
\&        fan4:          0 RPM  (min =    0 RPM)
\&        CPU Temp:    +57.2 C  (low  =  +2.0 C, high = +91.0 C)
\&        Board Temp:  +35.2 C  (low  =  +2.0 C, high = +91.0 C)
\&        Remote Temp: +35.8 C  (low  =  +2.0 C, high = +58.0 C)
\&        cpu0_vid:   +1.338 V
.Ve
.PP
Following the sensors kernel module load you could have more or less output
than that. To monitor all sensors CPUs temperature on my server I need to add
the following lines into sysusage.cfg:
.PP
.Vb 3
\&        sensors:CPU Temp:75
\&        sensors:Board Temp:45
\&        sensors:Remote Temp:45
.Ve
.PP
This will create 3 graphs based on lines matching '\s-1CPU\s0 Temp', an other with
lines matching 'Board Temp' and the last with lines matching 'Remote Temp'.
As I have 2 CPUs for each graph there will be 2 values. You can not report
more than 3 values per graph, this is hard coded into sysusage. So if you
have more CPUs you will not see more than 3 values. Here it will sent alarm
when temperature exceed the given values (75,45,45).
.PP
To monitor fan speed, I just add lines like this in the configuration file:
.PP
.Vb 2
\&        sensors:fan2:11000:8095
\&        sensors:fan3:11000:8095
.Ve
.PP
This whil create 2 graphs for fan 2 and fan 3. With an alarm sent when speed
exceed 11000 \s-1RPM\s0 or is lower than 8095 \s-1RPM.\s0
.PP
On my personal computer (/etc/sysconfig/lm_sensors => modprobe coretemp)
sensors output is:
.PP
.Vb 3
\&        coretemp\-isa\-0000
\&        Adapter: ISA adapter
\&        Core 0:      +53.0 C  (high = +78.0 C, crit = +100.0 C)
\&
\&        coretemp\-isa\-0001
\&        Adapter: ISA adapter
\&        Core 1:      +50.0 C  (high = +78.0 C, crit = +100.0 C)
.Ve
.PP
To monitor \s-1CPU\s0 temprature, I just add this line in my sysusage.cfg:
.PP
.Vb 1
\&        sensors:Core:70
.Ve
.PP
This will generate a graph with 2 graphed data for Core 0 and Core 1.
.PP
Now that sysstat sar natively reports deviceis temperature and fan speed
you don't need sensors anymore. Type 'temp' can be used instead and type
\&'fan' for the fan speed. The target of these types is the device number,
See sar \-m \s-1TEMP\s0 or sar \-m \s-1FAN\s0 to see which device number to monitor.
.SH "BUGS / FEATURE REQUEST"
.IX Header "BUGS / FEATURE REQUEST"
Please report any bugs, remarqs and feature request using the Github interface
at https://github.com/darold/sysusage/ or send a mail to the author.
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (C) 2003\-2015 Gilles Darold
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 3 of the License, or
any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE. \s0 See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software Foundation,
Inc., 51 Franklin Street, Fifth Floor, Boston, \s-1MA 02110\-1301  USA\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Gilles Darold <gilles _|_At_|_ darold _|_DoT_|_ net>
.SH "ACKNOWLEGMENT"
.IX Header "ACKNOWLEGMENT"
I want ot thanks all the people who help to build this tool with a very special
thank to Marat Dyatko for the web design contribution.
